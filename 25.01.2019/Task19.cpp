/* Гоночная трасса состоит из двух основных дорог и нескольких переездов, позволяющих перейти с одной дороги на другую. На всех участках, включая переезды, движение разрешено только в одну сторону, поэтому переезд возможен только с дороги A на дорогу B. Гонщик стартует в точке A0 и должен финишировать в точке BN. Он знает, за какое время сможет пройти каждый участок пути по каждой дороге, то есть время прохождения участков A0A1, A1A2, ..., AN-1AN, B0B1, B1B2, ..., BN-1BN. Время прохождения всех переездов A0B0, A1B1, ..., ANBN одинаково и известно гонщику. Необходимо определить, за какое минимальное время гонщик сможет пройти трассу.
Входные данные
В первой строке задаётся количество участков трассы N. Во второй строке задаётся целое число t — время (в секундах) прохождения каждого из переездов A0B0, A1B1, ..., ANBN. В каждой из последующих N строк записано два целых числа ai и bi, задающих время (в секундах) прохождения очередного участка на каждой из
 
дорог. В первой из этих строк указывается время прохождения участков A0A1 и B0B1, во второй — A1A2 и B1B2 и т. д.
Выходные данные
Программа должна напечатать одно целое число: минимально возможное время прохождения трассы (в секундах). */

#include <iostream>
using namespace std;
int main() {
	int N, trr, Wew, Sas, X, Y, Y1, Y2;
	cin >> N;
	cin >> trr;
	X = 0;
	Y = trr;
	for (int i = 1; i <= N; i++) {
		cin >> Wew >> Sas;
		X += Wew;
		Y1 = Y + Sas;
		Y2 = X + trr;
		if (Y1 < Y2) {
			Y = Y1;
		}
		else {
			Y = Y2;
		}
	}
	cout << Y;
	return 0;
}
